import { lightsGame } from '../src/main';

it('test 1', () => {
  expect(
    lightsGame(
      2,
      [
        [1, 1],
        [0, 0],
      ],
      [0]
    )
  ).toEqual([1, 1]);
});

it('test 2', () => {
  expect(
    lightsGame(
      2,
      [
        [1, 1],
        [0, 0],
      ],
      [0, 0]
    )
  ).toEqual([0, 0]);
});

it('test 3', () => {
  expect(
    lightsGame(
      2,
      [
        [0, 1],
        [1, 0],
        [1, 1],
        [1, 0],
      ],
      [1, 0, 1, 0, 0, 0, 0]
    )
  ).toEqual([0, 1]);
});

it('test 4', () => {
  expect(
    lightsGame(
      2,
      [
        [1, 0],
        [0, 1],
      ],
      [0, 1, 1]
    )
  ).toEqual([1, 0]);
});

it('test 5', () => {
  expect(lightsGame(3, [[1, 0, 1]], [0])).toEqual([1, 0, 1]);
});

it('test 6', () => {
  expect(
    lightsGame(
      10,
      [
        [0, 1, 1, 0, 1, 0, 0, 0, 1, 1],
        [1, 0, 0, 1, 0, 0, 0, 1, 1, 1],
      ],
      [0, 1, 1]
    )
  ).toEqual([0, 1, 1, 0, 1, 0, 0, 0, 1, 1]);
});

it('test 7', () => {
  expect(
    lightsGame(
      10,
      [
        [0, 0, 1, 0, 1, 1, 1, 0, 0, 1],
        [1, 0, 1, 0, 0, 0, 1, 1, 1, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0],
        [1, 0, 1, 0, 0, 1, 0, 1, 1, 0],
        [1, 0, 0, 1, 0, 1, 0, 1, 0, 1],
      ],
      [2, 2, 3, 4]
    )
  ).toEqual([0, 0, 1, 1, 0, 0, 0, 0, 1, 1]);
});

it('test 8', () => {
  const args = require('./data/8.in.json');
  const lightCount: number = args[0];
  const toggleButtons: number[][] = args[1];
  const actions: number[] = args[2];
  expect(lightsGame(lightCount, toggleButtons, actions)).toEqual([0, 0, 1]);
});

it('test 9', () => {
  expect(
    lightsGame(
      20,
      [
        [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1],
        [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0],
        [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1],
        [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1],
        [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1],
        [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1],
        [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0],
        [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1],
        [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],
        [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1],
        [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1],
        [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0],
        [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1],
        [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0],
        [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1],
        [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0],
        [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0],
        [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0],
      ],
      [8, 7, 17, 3, 18, 14, 1, 9, 1, 14, 1, 3, 9, 11, 0, 0, 0, 6, 19, 19]
    )
  ).toEqual([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1]);
});

it('test 10', () => {
  const args = require('./data/10.in.json');
  const lightCount: number = args[0];
  const toggleButtons: number[][] = args[1];
  const actions: number[] = args[2];
  expect(lightsGame(lightCount, toggleButtons, actions)).toEqual([
    1,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    1,
    1,
    0,
    1,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
  ]);
});

it('test 11', () => {
  const args = require('./data/11.in.json');
  const lightCount: number = args[0];
  const toggleButtons: number[][] = args[1];
  const actions: number[] = args[2];
  expect(lightsGame(lightCount, toggleButtons, actions)).toEqual([
    0,
    1,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    1,
    0,
    1,
    1,
  ]);
});
